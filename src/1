import model_ as md
from flask import Flask , Response
from flask import request
from flask import render_template
from collections import Counter
import base64
import requests
import json
import one_graph as og
import summarize
import jsonpickle
import cv2


## GET : 자료를 요청할 때 사용.
## POST : 자료를 생성을 요청할 때 사용.
## PUT : 자료의 수정을 요청할 때 사용.
## DELETE : 자료의 삭제를 요청할 때 사용.


app = Flask(__name__)


model_name = 'alaggung/bart-r3f'
# model_name = 'ainize/kobart-news'

summarizer = summarize.summarize(model_name , model_name )

@app.route('/', methods=['POST'])
def render_file():
    if request.method == 'POST':
        datas = request.get_json()

        pe_count = []
        script = []
        print('리퀘스트를 받았습니다.')

        for i in datas['scripts']:
            pe_count.append(i["name"])
            script.append(f'{i["name"]}:{i["text"]}')
            
        pe_count, doc = summarizer.prepro(script) 
        print(script)
        print(doc)
        script = ''.join(script)
        doc = ''.join(doc)

        # 그래프 생성
        og.one_graph(pe_count.values(), pe_count.keys())
        img = cv2.imread('1.png', cv2.IMREAD_COLOR)
        img = cv2.resize(img, (120, 120))
        _, img = cv2.imencode('.png', img)
        img = base64.encodebytes(img).decode('utf-8')

        # 키워드 생성
        keyword = summarizer.mmr(doc)

        # 요약문 생성
        #print(pe_count)
       # print(script)
       # print(doc)
        summary = summarizer.get_summary(keyword, script)

        print('response를 보냅니다.')
        # response 생성
        response = {"graph":img, "text":script, "keyword":keyword, "summary":summary}
        response = jsonpickle.encode(response)


        return Response(response=response , status = 200 , mimetype='application/json')
    return 'Got request as Get method' 


# #ver2,,insert queue
# @app.route('/uploader')
# def uploader():        
#     response = requests.post()
#     return 'connected!!'
    

if __name__ == '__main__':
    app.run(host='0.0.0.0' , port = 9090)

